{"version":3,"sources":["sortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["mergeSort","array","animations","length","mergeSortHelper","quickSort","quickSortHelper","startIdx","endIdx","pi","temp","push","pivot","i","j","partition","mainArray","middleIdx","Math","floor","auxiliaryArray","slice","k","doMerge","ANIMATION_SPEED_MS","PRIMARY_COLOR","SECONDARY_COLOR","PIVOT_COLOR","barWidth","width","SortingVisualizer","props","state","this","resetArray","min","max","random","setState","sortingAlgorithms","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","timer","barPivotIdx","barPivotStyle","ans","min_idx","animation","window","location","reload","slow","getElementById","medium","fast","className","class","onClick","selectionSort","bubbleSort","id","speedSlow","speedMedium","speedFast","map","value","idx","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cccf911c.chunk.js","sourcesContent":["export const selectionSort = array => {\r\n    const ans = [];\r\n    for(let i=0;i<array.length;i++){\r\n        let min_idx = i;\r\n        for(let j=i+1;j<array.length;j++){\r\n            if(array[j] < array[min_idx]){\r\n              min_idx = j;\r\n            }\r\n        }\r\n        ans.push([i,min_idx]);\r\n        [array[i],array[min_idx]] = [array[min_idx],array[i]];\r\n    }\r\n    return ans;\r\n}\r\nexport const bubbleSort = array => {\r\n  const ans = [];\r\n  for(let i=0;i<array.length-1;i++){\r\n      for(let j=0;j<array.length-i-1;j++){\r\n          if(array[j] > array[j+1]){\r\n              [array[j],array[j+1]] = [array[j+1],array[j]];\r\n              ans.push([j,j+1]);\r\n          }\r\n      }\r\n  }\r\n  return ans;\r\n}\r\nexport const mergeSort = array => {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  mergeSortHelper(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\nexport const quickSort = array => {\r\n  const animations = [];\r\n  quickSortHelper(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nfunction quickSortHelper(\r\n  array,\r\n  startIdx,\r\n  endIdx,\r\n  animations\r\n) {\r\n  if(startIdx >= endIdx) return;\r\n  const pi = partition(array,startIdx,endIdx,animations);\r\n  quickSortHelper(array,startIdx,pi-1,animations);\r\n  quickSortHelper(array,pi+1,endIdx,animations); \r\n}\r\n\r\nfunction partition(\r\n  array,\r\n  startIdx,\r\n  endIdx,\r\n  animations\r\n){\r\n  const temp = [];\r\n  temp.push([endIdx,endIdx]);\r\n  const pivot = array[endIdx];\r\n  let i = startIdx;\r\n  for(let j=startIdx;j<endIdx;j++){\r\n    if(array[j] < pivot){\r\n      [array[j],array[i]] = [array[i],array[j]];\r\n      temp.push([i,j]);\r\n      i++;\r\n    }\r\n  }\r\n  [array[i],array[endIdx]] = [array[endIdx],array[i]];\r\n  temp.push([i,endIdx]);\r\n  animations.push(temp);\r\n  return i;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  animations,\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(mainArray, startIdx, middleIdx, animations);\r\n  mergeSortHelper(mainArray, middleIdx + 1, endIdx, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, animations);\r\n}\r\n  \r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  animations,\r\n) {\r\n  const auxiliaryArray = mainArray.slice();\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      animations.push([i, j]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      animations.push([i, j]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    animations.push([i, i]);\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    animations.push([i, i]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    animations.push([j, j]);\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    animations.push([j, j]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}","import React from \"react\";\r\nimport * as sortingAlgorithms from '../sortingAlgorithms/sortingAlgorithms';\r\nimport './SortingVisualizer.css';\r\nconst SLOW_SPEED = 150;\r\nconst MEDIUM_SPEED = 30;\r\nconst FAST_SPEED = 5;\r\nlet ANIMATION_SPEED_MS = MEDIUM_SPEED;\r\nconst NUMBER_OF_ARRAY_BARS = 50;\r\nconst PRIMARY_COLOR = 'rgb(13, 65, 59)';\r\nconst SECONDARY_COLOR = 'red';\r\nconst PIVOT_COLOR = 'chartreuse';\r\nconst MIN_HEIGHT = 10;\r\nconst MAX_HEIGHT = 400;\r\nconst width = 1000;\r\nconst barWidth = Math.floor(width/NUMBER_OF_ARRAY_BARS) - 1;\r\nexport default class SortingVisualizer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray(){\r\n        const array = [];\r\n        for(let i=0;i<NUMBER_OF_ARRAY_BARS;i++){\r\n            array.push(randomIntFromInterval(MIN_HEIGHT,MAX_HEIGHT));\r\n            // array.push(10);\r\n        }\r\n        this.setState({array});\r\n    }\r\n    \r\n    mergeSort() {\r\n        const animations = sortingAlgorithms.mergeSort(this.state.array);\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        for (let i = 0; i < animations.length; i++) {\r\n          const isColorChange = i % 3 !== 1;\r\n          if (isColorChange) {\r\n            const [barOneIdx, barTwoIdx] = animations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n            setTimeout(() => {\r\n              barOneStyle.backgroundColor = color;\r\n              barTwoStyle.backgroundColor = color;\r\n            }, i * ANIMATION_SPEED_MS);\r\n          } else {\r\n            setTimeout(() => {\r\n              const [barOneIdx, newHeight] = animations[i];\r\n              const barOneStyle = arrayBars[barOneIdx].style;\r\n              barOneStyle.height = `${newHeight}px`;\r\n            }, i * ANIMATION_SPEED_MS);\r\n          }\r\n        }\r\n      }\r\n\r\n    quickSort() {\r\n        const animations = sortingAlgorithms.quickSort(this.state.array);\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        let timer = 0;\r\n        for(const partition of animations){\r\n            const barPivotIdx = partition[0][0];\r\n            const barPivotStyle = arrayBars[barPivotIdx].style;\r\n\r\n            for(let i=1;i<partition.length;i++){\r\n                const [barOneIdx, barTwoIdx] = partition[i];\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n                    barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n                    barPivotStyle.backgroundColor = PIVOT_COLOR;\r\n                },timer++*ANIMATION_SPEED_MS);\r\n                setTimeout(() => {\r\n                    const temp = barOneStyle.height;\r\n                    barOneStyle.height = barTwoStyle.height;\r\n                    barTwoStyle.height = temp;\r\n                },timer++*ANIMATION_SPEED_MS);\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n                    barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n                    barPivotStyle.backgroundColor = PIVOT_COLOR;\r\n                },timer++*ANIMATION_SPEED_MS);\r\n            }\r\n            setTimeout(() => {\r\n                barPivotStyle.backgroundColor = PRIMARY_COLOR;\r\n            },timer++*ANIMATION_SPEED_MS);\r\n        }\r\n    }\r\n\r\n    selectionSort() {\r\n        const animations = sortingAlgorithms.selectionSort(this.state.array);\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        let i = 0;\r\n        for(const animation of animations){\r\n            const [barOneIdx, barTwoIdx] = animation;\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            setTimeout(() => {\r\n                barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n                barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n            },i++*ANIMATION_SPEED_MS);\r\n            setTimeout(() => {\r\n                const temp = barOneStyle.height;\r\n                barOneStyle.height = barTwoStyle.height;\r\n                barTwoStyle.height = temp;\r\n            },i++*ANIMATION_SPEED_MS);\r\n            setTimeout(() => {\r\n                barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n                barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n            },i++*ANIMATION_SPEED_MS);\r\n        }\r\n    }\r\n\r\n    bubbleSort() {\r\n        const animations = sortingAlgorithms.bubbleSort(this.state.array);\r\n        const arrayBars = document.getElementsByClassName('array-bar');\r\n        let i = 0;\r\n        for(const animation of animations){\r\n            const [barOneIdx, barTwoIdx] = animation;\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            setTimeout(() => {\r\n                barOneStyle.backgroundColor = SECONDARY_COLOR;\r\n                barTwoStyle.backgroundColor = SECONDARY_COLOR;\r\n            },i++*ANIMATION_SPEED_MS);\r\n            setTimeout(() => {\r\n                const temp = barOneStyle.height;\r\n                barOneStyle.height = barTwoStyle.height;\r\n                barTwoStyle.height = temp;\r\n            },i++*ANIMATION_SPEED_MS);\r\n            setTimeout(() => {\r\n                barOneStyle.backgroundColor = PRIMARY_COLOR;\r\n                barTwoStyle.backgroundColor = PRIMARY_COLOR;\r\n            },i++*ANIMATION_SPEED_MS);\r\n        }\r\n    }\r\n    \r\n    reload(){\r\n        window.location.reload();\r\n    }\r\n\r\n    speedSlow(){\r\n        ANIMATION_SPEED_MS = SLOW_SPEED;\r\n        const slow = document.getElementById('slow');\r\n        const medium = document.getElementById('medium');\r\n        const fast = document.getElementById('fast');\r\n        slow.style.backgroundColor = 'red'\r\n        medium.style.backgroundColor = 'rgb(56, 15, 15)';\r\n        fast.style.backgroundColor = 'rgb(56, 15, 15)';\r\n    }\r\n    speedMedium(){\r\n        ANIMATION_SPEED_MS = MEDIUM_SPEED;\r\n        const slow = document.getElementById('slow');\r\n        const medium = document.getElementById('medium');\r\n        const fast = document.getElementById('fast');\r\n        slow.style.backgroundColor = 'rgb(56, 15, 15)'\r\n        medium.style.backgroundColor = 'red';\r\n        fast.style.backgroundColor = 'rgb(56, 15, 15)';\r\n    }\r\n    speedFast(){\r\n        ANIMATION_SPEED_MS = FAST_SPEED;\r\n        const slow = document.getElementById('slow');\r\n        const medium = document.getElementById('medium');\r\n        const fast = document.getElementById('fast');\r\n        slow.style.backgroundColor = 'rgb(56, 15, 15)'\r\n        medium.style.backgroundColor = 'rgb(56, 15, 15)';\r\n        fast.style.backgroundColor = 'red';\r\n    }\r\n\r\n    render() {\r\n        const {array} = this.state;\r\n        \r\n        return (\r\n            <div className=\"array-container\">\r\n                <button class=\"loading\" onClick={() => this.resetArray()}>Generate New Array</button>\r\n                <button class=\"loading\" onClick={() => this.reload()}>Reload</button>\r\n                <br/>\r\n                <p>Type:</p>\r\n                <button class=\"sorts\" onClick={() => this.mergeSort()}>Merge Sort</button>\r\n                <button class=\"sorts\" onClick={() => this.quickSort()}>Quick Sort</button>\r\n                <button class=\"sorts\" onClick={() => this.selectionSort()}>Selection Sort</button>\r\n                <button class=\"sorts\" onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n                <br/>\r\n                <p>Speed:</p>\r\n                <button class=\"speed\" id=\"slow\" onClick={() => this.speedSlow()}>Slow</button>\r\n                <button class=\"speed\" id=\"medium\" onClick={() => this.speedMedium()}>Medium</button>\r\n                <button class=\"speed\" id=\"fast\" onClick={() => this.speedFast()}>Fast</button>\r\n                <br/>\r\n                {array.map((value,idx) => (\r\n                    <div \r\n                        className=\"array-bar\" \r\n                        key={idx}\r\n                        style={{height: `${value}px`, width: `${barWidth}px`}} >\r\n                            &nbsp;\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min,max){\r\n    return Math.floor(Math.random() * (max-min+1) + min);\r\n}\r\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"HEADING\">Sorting Visualizer By Mohit Babani</div>\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}